import { useState, useEffect } from 'react'
import { fetchCategories, fetchSubcategories } from '../../api'
import type { Category, Subcategory } from '../../types'

type CategoriesPageProps = {
  token: string
  editable?: boolean
}

export const CategoriesPage: React.FC<CategoriesPageProps> = ({ token, editable = false }) => {
  const [categories, setCategories] = useState<Category[]>([])
  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null)
  const [subcategories, setSubcategories] = useState<Subcategory[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    loadCategories()
  }, [])

  useEffect(() => {
    if (selectedCategory) {
      loadSubcategories(selectedCategory.id)
    } else {
      setSubcategories([])
    }
  }, [selectedCategory])

  const loadCategories = async () => {
    try {
      setLoading(true)
      const data = await fetchCategories()
      setCategories(data)
    } catch (error) {
      console.error('Failed to load categories:', error)
    } finally {
      setLoading(false)
    }
  }

  const loadSubcategories = async (categoryId: number) => {
    try {
      const data = await fetchSubcategories(token, categoryId)
      setSubcategories(data)
    } catch (error) {
      console.error('Failed to load subcategories:', error)
    }
  }

  if (loading) {
    return (
      <div className="categories-page">
        <div className="loading-indicator">
          <div className="spinner"></div>
          <span>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...</span>
        </div>
      </div>
    )
  }

  return (
    <div className="categories-page">
      <div className="categories-header">
        <h1>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h1>
        <p className="subtitle">
          {editable 
            ? '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏'
            : '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ä–∞—Å—Ö–æ–¥–æ–≤'
          }
        </p>
      </div>

      <div className="categories-grid">
        {/* Categories List */}
        <div className="categories-list-container">
          <div className="list-header">
            <h2>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ({categories.length})</h2>
            {editable && (
              <button className="add-btn" onClick={() => alert('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏')}>
                ‚ûï –î–æ–±–∞–≤–∏—Ç—å
              </button>
            )}
          </div>
          <div className="categories-list">
            {categories.map((category) => (
              <div
                key={category.id}
                className={`category-card ${selectedCategory?.id === category.id ? 'selected' : ''}`}
                onClick={() => setSelectedCategory(category)}
              >
                <div className="category-name">{category.name}</div>
                <div className="category-meta">
                  ID: {category.id}
                  {editable && (
                    <button 
                      className="delete-btn-small" 
                      onClick={(e) => {
                        e.stopPropagation()
                        alert('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏')
                      }}
                      title="–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
                    >
                      üóëÔ∏è
                    </button>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Subcategories List */}
        <div className="subcategories-list-container">
          <div className="list-header">
            <h2>
              {selectedCategory 
                ? `–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è "${selectedCategory.name}" (${subcategories.length})`
                : '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'}
            </h2>
            {editable && selectedCategory && (
              <button className="add-btn" onClick={() => alert('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏')}>
                ‚ûï –î–æ–±–∞–≤–∏—Ç—å
              </button>
            )}
          </div>
          {selectedCategory ? (
            <div className="subcategories-list">
              {subcategories.length === 0 ? (
                <div className="empty-state">
                  <p>–ù–µ—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>
                </div>
              ) : (
                subcategories.map((subcategory) => (
                  <div key={subcategory.id} className="subcategory-card">
                    <div className="subcategory-name">{subcategory.name}</div>
                    <div className="subcategory-meta">
                      ID: {subcategory.id}
                      {editable && (
                        <button 
                          className="delete-btn-small" 
                          onClick={(e) => {
                            e.stopPropagation()
                            alert('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏')
                          }}
                          title="–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é"
                        >
                          üóëÔ∏è
                        </button>
                      )}
                    </div>
                  </div>
                ))
              )}
            </div>
          ) : (
            <div className="empty-state">
              <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –µ—ë –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>
            </div>
          )}
        </div>
      </div>

      <div className="categories-info">
        <h3>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <ul>
          <li>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤</li>
          <li>–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</li>
          <li>–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å—Ö–æ–¥–∞ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é</li>
          <li>–ê–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –∏—Å—Ç–æ—Ä–∏–∏</li>
        </ul>
      </div>
    </div>
  )
}

