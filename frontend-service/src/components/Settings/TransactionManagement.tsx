import { useState } from 'react'
import { fetchTransactions } from '../../api'
import type { Transaction, TransactionFilters } from '../../types'
import { formatCurrency, formatDate } from '../../utils/helpers'

type TransactionManagementProps = {
  token: string
}

export const TransactionManagement: React.FC<TransactionManagementProps> = ({ token }) => {
  const [searchQuery, setSearchQuery] = useState('')
  const [transactions, setTransactions] = useState<Transaction[]>([])
  const [loading, setLoading] = useState(false)
  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null)

  const handleSearch = async () => {
    if (!searchQuery.trim()) return

    try {
      setLoading(true)
      const filters: TransactionFilters = {
        operation_type: 'both',
        limit: 50
      }
      
      const response = await fetchTransactions(token, filters)
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É (–∫–∞—Ç–µ–≥–æ—Ä–∏—è, —Å—É–º–º–∞, –¥–∞—Ç–∞)
      const filtered = (response.transactions || []).filter((t) => {
        const searchLower = searchQuery.toLowerCase()
        const categoryMatch = t.category_name?.toLowerCase().includes(searchLower)
        const subcategoryMatch = t.subcategory_name?.toLowerCase().includes(searchLower)
        const amountMatch = (t.amount_cents / 100).toString().includes(searchQuery)
        const dateMatch = formatDate(t.timestamp).toLowerCase().includes(searchLower)
        
        return categoryMatch || subcategoryMatch || amountMatch || dateMatch
      })
      
      setTransactions(filtered)
    } catch (error) {
      console.error('Failed to search transactions:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleDelete = async (transaction: Transaction) => {
    if (!confirm(`–£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞ ${formatCurrency(transaction.amount_cents)}?`)) {
      return
    }

    try {
      // TODO: Implement soft delete API endpoint
      // await fetch(`/api/transactions/${transaction.id}`, {
      //   method: 'DELETE',
      //   headers: { 'Authorization': `Bearer ${token}` }
      // })
      
      alert('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏')
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
      setTransactions(transactions.filter(t => t.id !== transaction.id))
      setSelectedTransaction(null)
    } catch (error) {
      console.error('Failed to delete transaction:', error)
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é')
    }
  }

  const getTransactionColor = (operationType: 'expense' | 'income') => {
    return operationType === 'expense' ? 'var(--error)' : 'var(--success)'
  }

  const getTransactionIcon = (operationType: 'expense' | 'income') => {
    return operationType === 'expense' ? '‚Üì' : '‚Üë'
  }

  return (
    <div className="transaction-management">
      <div className="management-header">
        <h2>üóëÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏</h2>
        <p className="subtitle">
          –ù–∞–π–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Å—É–º–º–µ –∏–ª–∏ –¥–∞—Ç–µ –∏ —É–¥–∞–ª–∏—Ç–µ –µ—ë –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        </p>
      </div>

      <div className="search-section">
        <div className="search-input-group">
          <input
            type="text"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            onKeyPress={(e) => e.key === 'Enter' && handleSearch()}
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Å—É–º–º–µ –∏–ª–∏ –¥–∞—Ç–µ..."
            className="search-input"
          />
          <button 
            onClick={handleSearch} 
            disabled={loading || !searchQuery.trim()}
            className="search-btn"
          >
            {loading ? '‚è≥' : 'üîç'} –ù–∞–π—Ç–∏
          </button>
        </div>
      </div>

      {transactions.length > 0 && (
        <div className="search-results">
          <div className="results-header">
            <h3>–ù–∞–π–¥–µ–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏–π: {transactions.length}</h3>
          </div>
          
          <div className="transactions-grid">
            {transactions.map((transaction) => (
              <div 
                key={transaction.id} 
                className={`transaction-card ${selectedTransaction?.id === transaction.id ? 'selected' : ''}`}
                onClick={() => setSelectedTransaction(transaction)}
              >
                <div className="transaction-icon" style={{ color: getTransactionColor(transaction.operation_type) }}>
                  {getTransactionIcon(transaction.operation_type)}
                </div>
                
                <div className="transaction-details">
                  <div className="transaction-amount" style={{ color: getTransactionColor(transaction.operation_type) }}>
                    {transaction.operation_type === 'expense' ? '-' : '+'}{formatCurrency(transaction.amount_cents)}
                  </div>
                  <div className="transaction-info">
                    <div className="transaction-category">
                      {transaction.subcategory_name || transaction.category_name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}
                    </div>
                    <div className="transaction-meta">
                      <span className="transaction-user">{transaction.username}</span>
                      <span className="transaction-date">{formatDate(transaction.timestamp)}</span>
                    </div>
                  </div>
                </div>

                <div className="transaction-actions">
                  <button
                    onClick={(e) => {
                      e.stopPropagation()
                      handleDelete(transaction)
                    }}
                    className="delete-btn"
                    title="–£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é"
                  >
                    üóëÔ∏è
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {transactions.length === 0 && searchQuery && !loading && (
        <div className="empty-state">
          <div className="empty-state-icon">üîç</div>
          <h3>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
        </div>
      )}

      {!searchQuery && (
        <div className="info-box">
          <h4>üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h4>
          <ul>
            <li>–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü—Ä–æ–¥—É–∫—Ç—ã")</li>
            <li>–ò–ª–∏ —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, "100")</li>
            <li>–ò–ª–∏ –¥–∞—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, "26.10")</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–ù–∞–π—Ç–∏" –∏–ª–∏ Enter</li>
            <li>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –Ω–∞–∂–º–∏—Ç–µ üóëÔ∏è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è</li>
          </ul>
          
          <div className="warning-box">
            <strong>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:</strong> –£–¥–∞–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ. 
            –í –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å "–º—è–≥–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è" 
            —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.
          </div>
        </div>
      )}
    </div>
  )
}

