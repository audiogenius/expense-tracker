#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Expense Tracker –Ω–∞ Timeweb Cloud MSK 30
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-to-timeweb.sh your-domain.com

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    echo -e "${RED}‚ùå –£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω: ./deploy-to-timeweb.sh your-domain.com${NC}"
    exit 1
fi

DOMAIN=$1
echo -e "${BLUE}üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Expense Tracker –Ω–∞ –¥–æ–º–µ–Ω: $DOMAIN${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    echo -e "${RED}‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo ./deploy-to-timeweb.sh $DOMAIN${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${YELLOW}‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
mkdir -p /root/expense-tracker
cd /root/expense-tracker

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo -e "${YELLOW}‚è≥ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
if [ ! -d ".git" ]; then
    git clone https://github.com/audiogenius/expense-tracker.git .
fi

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–µ—Ç–∫—É —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏
git checkout feature/performance-optimization-2gb-ram
git pull origin feature/performance-optimization-2gb-ram

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ docker-compose
echo -e "${YELLOW}‚è≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker Compose –¥–ª—è Timeweb...${NC}"
cp deploy/docker-compose.timeweb.yml docker-compose.yml

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo -e "${YELLOW}‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
cat > .env << EOF
# Database Configuration
POSTGRES_USER=postgres
POSTGRES_PASSWORD=expense_tracker_$(date +%s)_secure
POSTGRES_DB=expense_tracker
TZ=Europe/Moscow

# API Configuration
API_PORT=8080
JWT_SECRET=$(openssl rand -base64 32)
JWT_EXPIRES_IN=24h

# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
TELEGRAM_CHAT_IDS=your_telegram_chat_id_here

# OCR Configuration
USE_LOCAL_OCR=false

# API URLs
API_URL=http://api:8080

# Analytics Service Configuration
ANALYTICS_PORT=8081
OLLAMA_URL=http://ollama:11434
OLLAMA_MODEL=qwen2.5:0.5b

# Ollama Configuration (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è 2GB RAM)
OLLAMA_NUM_PARALLEL=1
OLLAMA_MAX_LOADED_MODELS=1
OLLAMA_HOST=0.0.0.0:11434
EOF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
echo -e "${YELLOW}‚è≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx...${NC}"
cat > /etc/nginx/sites-available/expense-tracker << EOF
server {
    listen 80;
    server_name $DOMAIN;
    
    # Redirect HTTP to HTTPS
    return 301 https://\$server_name\$request_uri;
}

server {
    listen 443 ssl http2;
    server_name $DOMAIN;
    
    # SSL configuration (–±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω certbot)
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Proxy to frontend
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # Proxy to API
    location /api/ {
        proxy_pass http://localhost:8080/api/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # Proxy to Analytics
    location /analytics/ {
        proxy_pass http://localhost:8081/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∞–π—Ç–∞
ln -sf /etc/nginx/sites-available/expense-tracker /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
nginx -t

# –°–æ–∑–¥–∞–Ω–∏–µ systemd service
echo -e "${YELLOW}‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ systemd service...${NC}"
cat > /etc/systemd/system/expense-tracker.service << EOF
[Unit]
Description=Expense Tracker Application
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/root/expense-tracker
ExecStart=/usr/local/bin/docker-compose up -d
ExecStop=/usr/local/bin/docker-compose down
User=app
Group=app

[Install]
WantedBy=multi-user.target
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è app
useradd -m -s /bin/bash app 2>/dev/null || true
usermod -aG docker app
chown -R app:app /root/expense-tracker

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
systemctl daemon-reload
systemctl enable expense-tracker

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${YELLOW}‚è≥ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
sudo -u app docker-compose down 2>/dev/null || true
sudo -u app docker-compose build --no-cache
sudo -u app docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 60

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Ollama
echo -e "${YELLOW}‚è≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Ollama...${NC}"
max_attempts=30
attempt=0

while [ $attempt -lt $max_attempts ]; do
    if curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Ollama –≥–æ—Ç–æ–≤!${NC}"
        break
    fi
    
    echo -e "${YELLOW}‚è≥ Ollama –Ω–µ –≥–æ—Ç–æ–≤, –æ–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥... (–ø–æ–ø—ã—Ç–∫–∞ $((attempt + 1))/$max_attempts)${NC}"
    sleep 10
    attempt=$((attempt + 1))
done

if [ $attempt -eq $max_attempts ]; then
    echo -e "${RED}‚ùå Ollama –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 5 –º–∏–Ω—É—Ç${NC}"
    exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
echo -e "${YELLOW}‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ qwen2.5:0.5b...${NC}"
docker exec expense_ollama ollama pull qwen2.5:0.5b

# –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏
echo -e "${YELLOW}‚è≥ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏...${NC}"
response=$(curl -s -X POST http://localhost:11434/api/generate -d '{
    "model": "qwen2.5:0.5b",
    "prompt": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
    "stream": false
}')

if echo "$response" | grep -q "response"; then
    echo -e "${GREEN}‚úÖ –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ –Ω–µ –ø—Ä–æ—à–µ–ª, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ${NC}"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo -e "${YELLOW}‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞...${NC}"
certbot --nginx -d $DOMAIN --non-interactive --agree-tos --email admin@$DOMAIN

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
systemctl reload nginx

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
systemctl start expense-tracker

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
echo -e "${YELLOW}‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
curl -f http://localhost:8080/api/health && echo -e "${GREEN}‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}" || echo -e "${RED}‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
curl -f http://localhost:8081/health && echo -e "${GREEN}‚úÖ Analytics —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}" || echo -e "${RED}‚ùå Analytics –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
curl -f http://localhost:11434/api/tags && echo -e "${GREEN}‚úÖ Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}" || echo -e "${RED}‚ùå Ollama –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
echo -e "${YELLOW}‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏...${NC}"
free -h
docker stats --no-stream

echo ""
echo -e "${GREEN}üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo ""
echo -e "${BLUE}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://$DOMAIN"
echo "üìä API: https://$DOMAIN/api/health"
echo "ü§ñ Analytics: https://$DOMAIN/analytics/health"
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: $(free -h | grep Mem | awk '{print $3 "/" $2}')"
echo ""
echo -e "${BLUE}üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:${NC}"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: systemctl restart expense-tracker"
echo "‚Ä¢ –õ–æ–≥–∏: docker-compose logs -f"
echo "‚Ä¢ –°—Ç–∞—Ç—É—Å: systemctl status expense-tracker"
echo "‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: cd /root/expense-tracker && git pull && docker-compose up -d --build"
echo ""
echo -e "${BLUE}‚ö†Ô∏è –í–∞–∂–Ω–æ:${NC}"
echo "1. –û–±–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHAT_IDS –≤ .env"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∞–º—è—Ç–∏"
echo ""
echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!${NC}"
